# Single ownership
fn moves {
  let numbers = [10, 20, 30]

  # This is OK, and returns a `ref 10`.
  numbers[0]

  let nums = numbers

  # This is no longer OK, as `numbers` gave up ownership to
  # `nums`.
  numbers[0]
}

fn refs {
  let owned = [10, 20, 30]

  # We can "borrow" a value using references:
  let borrowed = ref owned

  # Both are OK and produce the same value: `ref 10`.
  owned[0]
  borrowed[0]

  # This isn't OK, as `ref T` doesn't allow mutation:
  borrowed.push(42)

  # For that we need a mutable reference:
  let mutable = mut owned

  mutable.push(42)
}
